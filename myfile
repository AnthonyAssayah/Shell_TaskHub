Fri Apr  7 18:26:37 IDT 2023
Fri Apr  7 15:27:09 UTC 2023



// 1- Update if/else function
// 2- debbug echoshell function problem with one example
// 3- debbug main, execute, handleshellcommand, forkprocess
// 4- change in the main
// 5- change in the execute
// 6- change in the echoshell with while loop







// update pipe 
 //    char *pipe_ptr = strchr(command, '|');
        // if (pipe_ptr == NULL) {
        //     // no pipe character found, just execute the command
        //     system(command);
        //     return 0;
        // }

        // // split the command into left and right parts
        // char left_cmd[MAX_LINE_LEN], right_cmd[MAX_LINE_LEN];
        // int pipe_pos = pipe_ptr - command;
        // strncpy(left_cmd, command, pipe_pos);
        // left_cmd[pipe_pos] = '\0';
        // strcpy(right_cmd, pipe_ptr+1);

        // // create pipes for inter-process communication
        // int fd[2];
        // if (pipe(fd) == -1) {
        //     perror("pipe");
        //     exit(1);
        // }

        // // create child process to execute left command
        // pid_t pid = fork();
        // if (pid == -1) {
        //     perror("fork");
        //     exit(1);
        // } else if (pid == 0) {
        //     // child process
        //     close(fd[0]); // close read end of pipe
        //     dup2(fd[1], STDOUT_FILENO); // redirect stdout to write end of pipe
        //     close(fd[1]); // close write end of pipe
        //     system(left_cmd); // execute left command
        //     exit(0);
        // }

        // // parent process
        // close(fd[1]); // close write end of pipe
        // dup2(fd[0], STDIN_FILENO); // redirect stdin to read end of pipe
        // close(fd[0]); // close read end of pipe
        // system(right_cmd); // execute right command with input from left command


// if/else examples
//  if date | grep Thu
// then
//  echo "Shabat Shalom"
// else
//  echo "Hard way to go"
// fi

//  if date | grep Mon
// then
//  echo "Shabat Shalom"
// else
//  echo "Hard way to go"
// fi

// if ls | grep non_existent_file.txt
// then
//     echo "file exists"
// else
//     echo "file does not exist"
// fi

// if rm non_existent_file.txt
// then
//     echo "file removed"
// else
//     echo "file not removed"
// fi

// if cat /etc/passwd | grep root 
// then
//     echo "root user found"
// else
//     echo "root user not found"
// fi

// if echo "hello world"
// then
//     echo "echo command executed"
// else
//     echo "echo command not executed"
// fi
